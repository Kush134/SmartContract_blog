exports.MAIN_NFT_ADDRESS = "0xA3b157a0c84c00AA6260F3cd06cE8746541aA8aB";
exports.MAIN_NFT_ABI = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouterAddress",
        type: "address",
      },
      { internalType: "uint8", name: "_levelsCount", type: "uint8" },
      { internalType: "string", name: "_baseURI", type: "string" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "addAuthorsRating",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "authorsAmounts",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionCollector",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "contractFeeForAuthor",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
    ],
    name: "converTokenPriceToEth",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_addressToCheck", type: "address" },
      { internalType: "address[]", name: "_collection", type: "address[]" },
    ],
    name: "isAddressExist",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "managers",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "onlyAuthor",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "minter", type: "address" }],
    name: "priceToMint",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFee",
    outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "uint256", name: "salePrice", type: "uint256" },
    ],
    name: "royaltyInfo",
    outputs: [
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "uint256", name: "royaltyAmount", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint8", name: "_levelsCount", type: "uint8" },
      { internalType: "string", name: "_baseURI", type: "string" },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newManager", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouterAddress",
        type: "address",
      },
    ],
    name: "setNewRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_newPrice", type: "uint256" }],
    name: "setPublicSaleTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint16", name: "fee", type: "uint16" }],
    name: "setRoyaltyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bool", name: "isVerified", type: "bool" },
      { internalType: "address", name: "_address", type: "address" },
    ],
    name: "setVerfiedContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
    name: "tokenByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "uint256", name: "index", type: "uint256" },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmounts",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "verifiedContracts",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];
exports.PUBLIC_DONATION_ADDRESS = "0xB56311eA8b47454F2F3b58D6b3faeB84eE8FFB00";
exports.PUBLIC_DONATION_ABI = [
  {
    inputs: [
      { internalType: "address", name: "mainNFTAddress", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
    ],
    name: "Donate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "addDonateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "donateEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "donateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "getAllDonateTokenAddressesByAuthor",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "removeDonateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "mainNFTAddress", type: "address" },
    ],
    name: "setIMainNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];
exports.SUBSCRIPTIONS_ADDRESS = "0xe56e5FD2D7aeAde39B04EFb41992a233948D304e";
exports.SUBSCRIPTIONS_ABI = [
  {
    inputs: [
      { internalType: "address", name: "mainNFTAddress", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hexName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct Subscriptions.Discount[]",
        name: "discounts",
        type: "tuple[]",
      },
    ],
    name: "NewOneTimeSubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hexName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymetnPeriod",
        type: "uint256",
      },
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct Subscriptions.Discount[]",
        name: "discounts",
        type: "tuple[]",
      },
    ],
    name: "NewRegularSubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionEndTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "addToBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "blackListByAuthor",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
    ],
    name: "changeActivityState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "bool", name: "isRegularSubscription", type: "bool" },
      { internalType: "uint256", name: "paymetnPeriod", type: "uint256" },
      { internalType: "uint256", name: "price", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Discount[]",
        name: "discountProgramm",
        type: "tuple[]",
      },
    ],
    name: "createNewSubscriptionByEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "bool", name: "isRegularSubscription", type: "bool" },
      { internalType: "uint256", name: "paymetnPeriod", type: "uint256" },
      { internalType: "address[]", name: "tokenAddresses", type: "address[]" },
      { internalType: "uint256", name: "price", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Discount[]",
        name: "discountProgramm",
        type: "tuple[]",
      },
    ],
    name: "createNewSubscriptionByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "discountSubscriptionsByAuthor",
    outputs: [
      { internalType: "uint256", name: "period", type: "uint256" },
      { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
    ],
    name: "getDiscountSubscriptionsByAuthor",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Discount[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
    ],
    name: "getParticipantsSubscriptionsByAuthor",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "participantAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "subscriptionEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.Participant[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
    ],
    name: "getPaymentSubscriptionsByAuthor",
    outputs: [
      {
        components: [
          { internalType: "address", name: "tokenAddress", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "uint256", name: "amountInEth", type: "uint256" },
          { internalType: "uint256", name: "paymentTime", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Payment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
    ],
    name: "getRatingSubscriptionsByAuthor",
    outputs: [
      { internalType: "uint256", name: "active", type: "uint256" },
      { internalType: "uint256", name: "cancelled", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "hexName", type: "bytes32" }],
    name: "getSubscriptionIndexByHexName",
    outputs: [{ internalType: "uint256[2]", name: "", type: "uint256[2]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "getSubscriptionsByAuthor",
    outputs: [
      {
        components: [
          { internalType: "bytes32", name: "hexName", type: "bytes32" },
          { internalType: "bool", name: "isActive", type: "bool" },
          { internalType: "bool", name: "isRegularSubscription", type: "bool" },
          { internalType: "uint256", name: "paymetnPeriod", type: "uint256" },
          {
            internalType: "address[]",
            name: "tokenAddresses",
            type: "address[]",
          },
          { internalType: "uint256", name: "price", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Subscription[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
      { internalType: "uint256", name: "periods", type: "uint256" },
    ],
    name: "getTotalPaymentAmountForPeriod",
    outputs: [
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "uint256", name: "amountInEth", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "participantIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "participantsSubscriptionsByAuthor",
    outputs: [
      { internalType: "address", name: "participantAddress", type: "address" },
      { internalType: "uint256", name: "subscriptionEndTime", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "paymentSubscriptionsByAuthor",
    outputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "uint256", name: "amountInEth", type: "uint256" },
      { internalType: "uint256", name: "paymentTime", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "removeBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "mainNFTAddress", type: "address" },
    ],
    name: "setIMainNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "period", type: "uint256" },
          { internalType: "uint256", name: "amountAsPPM", type: "uint256" },
        ],
        internalType: "struct Subscriptions.Discount[]",
        name: "discountProgramm",
        type: "tuple[]",
      },
    ],
    name: "setNewDiscountProgramm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
      { internalType: "uint256", name: "paymetnPeriod", type: "uint256" },
    ],
    name: "setNewPaymetnPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
      { internalType: "address[]", name: "tokenAddresses", type: "address[]" },
      { internalType: "uint256", name: "price", type: "uint256" },
    ],
    name: "setNewTokensAndPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "", type: "bytes32" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "subscriptionIndexByHexName",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "subscriptionId", type: "uint256" },
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "periods", type: "uint256" },
    ],
    name: "subscriptionPayment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "subscriptionsByAuthor",
    outputs: [
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "bool", name: "isActive", type: "bool" },
      { internalType: "bool", name: "isRegularSubscription", type: "bool" },
      { internalType: "uint256", name: "paymetnPeriod", type: "uint256" },
      { internalType: "uint256", name: "price", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "totalPaymentSubscriptionsByAuthoInEth",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];
exports.EVENTS_ADDRESS = "0xe0f49A0ef3371B46F72ffd996E992F256ABA5b8C";
exports.EVENTS_ABI = [
  {
    inputs: [
      { internalType: "address", name: "_mainNFTAddress", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentSessionId",
        type: "uint256",
      },
    ],
    name: "AwaitingConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      { indexed: true, internalType: "bytes32", name: "name", type: "bytes32" },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventStartTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodOfPenalty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxParticipants",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isModerated",
        type: "bool",
      },
    ],
    name: "NewPaymentSessionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bool", name: "isLike", type: "bool" },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentSessionId",
        type: "uint256",
      },
    ],
    name: "NewVote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentSessionId",
        type: "uint256",
      },
    ],
    name: "PurchaseCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentSessionId",
        type: "uint256",
      },
    ],
    name: "PurchaseConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "author",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentSessionId",
        type: "uint256",
      },
    ],
    name: "PurchaseRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "addToBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "addToWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "blackListByAuthor",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "buyTicketForPaymentSession",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "cancelByParticipant",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "participant", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "confirmParticipants",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "uint256", name: "price", type: "uint256" },
      { internalType: "uint256", name: "expirationTime", type: "uint256" },
      { internalType: "uint256", name: "eventStartTime", type: "uint256" },
      { internalType: "uint256", name: "periodOfPenalty", type: "uint256" },
      { internalType: "uint256", name: "maxParticipants", type: "uint256" },
      { internalType: "bool", name: "isModerated", type: "bool" },
    ],
    name: "createNewPaymentSessionByEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "price", type: "uint256" },
      { internalType: "uint256", name: "expirationTime", type: "uint256" },
      { internalType: "uint256", name: "eventStartTime", type: "uint256" },
      { internalType: "uint256", name: "periodOfPenalty", type: "uint256" },
      { internalType: "uint256", name: "maxParticipants", type: "uint256" },
      { internalType: "bool", name: "isModerated", type: "bool" },
    ],
    name: "createNewPaymentSessionByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "getAllPaymentSessionsByAuthor",
    outputs: [
      {
        components: [
          { internalType: "bytes32", name: "hexName", type: "bytes32" },
          { internalType: "bool", name: "fundsWithdrawn", type: "bool" },
          { internalType: "address", name: "tokenAddress", type: "address" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "expirationTime", type: "uint256" },
          { internalType: "uint256", name: "eventStartTime", type: "uint256" },
          { internalType: "uint256", name: "periodOfPenalty", type: "uint256" },
          { internalType: "uint256", name: "maxParticipants", type: "uint256" },
          { internalType: "bool", name: "isModerated", type: "bool" },
          {
            components: [
              {
                internalType: "address[]",
                name: "confirmed",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "notConfirmed",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "rejected",
                type: "address[]",
              },
            ],
            internalType: "struct Events.Participants",
            name: "participants",
            type: "tuple",
          },
          {
            components: [
              { internalType: "uint256", name: "like", type: "uint256" },
              { internalType: "uint256", name: "dislike", type: "uint256" },
              { internalType: "uint256", name: "cancelled", type: "uint256" },
            ],
            internalType: "struct Events.Rating",
            name: "rating",
            type: "tuple",
          },
        ],
        internalType: "struct Events.PaymentSession[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "author", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "participantVoted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "paymentSessionByAuthor",
    outputs: [
      { internalType: "bytes32", name: "hexName", type: "bytes32" },
      { internalType: "bool", name: "fundsWithdrawn", type: "bool" },
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "uint256", name: "price", type: "uint256" },
      { internalType: "uint256", name: "expirationTime", type: "uint256" },
      { internalType: "uint256", name: "eventStartTime", type: "uint256" },
      { internalType: "uint256", name: "periodOfPenalty", type: "uint256" },
      { internalType: "uint256", name: "maxParticipants", type: "uint256" },
      { internalType: "bool", name: "isModerated", type: "bool" },
      {
        components: [
          { internalType: "address[]", name: "confirmed", type: "address[]" },
          {
            internalType: "address[]",
            name: "notConfirmed",
            type: "address[]",
          },
          { internalType: "address[]", name: "rejected", type: "address[]" },
        ],
        internalType: "struct Events.Participants",
        name: "participants",
        type: "tuple",
      },
      {
        components: [
          { internalType: "uint256", name: "like", type: "uint256" },
          { internalType: "uint256", name: "dislike", type: "uint256" },
          { internalType: "uint256", name: "cancelled", type: "uint256" },
        ],
        internalType: "struct Events.Rating",
        name: "rating",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "removeBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
    ],
    name: "removeWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "mainNFTAddress", type: "address" },
    ],
    name: "setIMainNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "participant", type: "address" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "unconfirmParticipants",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bool", name: "like", type: "bool" },
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "voteForPaymentSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "whiteListByAuthor",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "author", type: "uint256" },
      { internalType: "uint256", name: "paymentSessionId", type: "uint256" },
    ],
    name: "withdrawAfterPaymentSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];
exports.ERC20_ABI = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
